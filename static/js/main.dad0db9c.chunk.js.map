{"version":3,"sources":["context/query-context.js","util/localStorage.js","context/theme-context.js","context/favourite-context.js","components/header/search/SearchBar.js","components/header/Header.js","components/individual-image/IndividualImage.js","util/constants.js","components/image-gallery/ImageGallery.js","hooks/useImageSearch.js","components/favourite-gallery/FavouriteGallery.js","views/home/Home.js","views/favourite/Favourite.js","views/error/Error.js","App.js","index.js"],"names":["SearchQueryContext","createContext","SearchQueryContextProvider","children","useState","query","setQuery","pageNumber","setPageNumber","Provider","value","useQueryValue","useContext","usePageNumberValue","getItemFromStorage","key","localStorage","JSON","parse","getItem","err","console","error","addItemToStorage","item","setItem","stringify","ThemeContext","ThemeContextProvider","persisted","isLightTheme","setIsLightTheme","useEffect","useThemeValue","FavouriteContext","initialState","favList","reducer","state","action","type","image","newFav","id","alt_description","regular","addToFavourite","payload","favImage","filter","x","removeFromFavourite","FavouriteContextProvider","useReducer","globalState","dispatch","useFavouriteValue","SearchBar","className","data-testid","aria-label","placeholder","onKeyDown","e","target","Header","sideBar","setSideBar","getNavClassName","onClick","to","color","checked","size","IndividualImage","index","find","isFavourite","setIsFavourite","downloadCoverRef","useRef","favouriteCoverRef","ref","idd","fetch","method","headers","then","response","arrayBuffer","buffer","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","catch","log","alt","onLoad","current","style","zIndex","src","BASE_URL","process","CLIENT_ID","ImageGallery","loading","setLoading","setError","images","setImages","hasMore","setHasMore","a","axios","params","client_id","page","res","prevImages","data","results","length","fetchImages","useImageSearch","observer","lastImageElementRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","map","urls","FavouriteGallery","fav","Home","getElementsByTagName","Favourite","Error","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dad0db9c.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport const SearchQueryContext = createContext();\n\nexport const SearchQueryContextProvider = ({ children }) => {\n  const [query, setQuery] = useState(\"mountains\");\n  const [pageNumber, setPageNumber] = useState(1);\n  return (\n    <SearchQueryContext.Provider value={{query, setQuery, pageNumber, setPageNumber}}>\n      {children}\n    </SearchQueryContext.Provider>\n  );\n};\n\nexport const useQueryValue = () => {\n  const { query, setQuery } = useContext(SearchQueryContext);\n  return {query, setQuery };\n} \n\nexport const usePageNumberValue = () => {\n  const { pageNumber, setPageNumber } = useContext(SearchQueryContext);\n  return { pageNumber, setPageNumber }\n} ","export const clearStorage = () => localStorage.clear();\n\nexport const getItemFromStorage = (key) => {\n    if (!localStorage) return;\n        \n    try {\n        return JSON.parse(localStorage.getItem(key));\n    } catch (err) {\n        console.error(`Error getting item ${key} from localStorage`, err);\n    }\n};\n\nexport const addItemToStorage = (key, item) => {\n    if (!localStorage) return;\n\n    try {\n        return localStorage.setItem(key, JSON.stringify(item));\n    } catch (err) {\n        console.error(`Error storing item ${key} to localStorage`, err);\n    }\n};\n\nexport const removeItemFromStorage = (key) => {\n    if (!localStorage) return;\n\n    try {\n        return localStorage.removeItem(key);\n    } catch (err) {\n        console.error(`Error removing item ${key} from localStorage`, err);\n    }\n};","import React, { useEffect, createContext, useContext, useState } from 'react';\nimport { addItemToStorage, getItemFromStorage } from '../util/localStorage';\n\nconst initialState = true;\n\nexport const ThemeContext = createContext();\n\nexport const  ThemeContextProvider = ({ children }) => {\n  const [ isLightTheme, setIsLightTheme ] = useState(() => {\n    const persisted = getItemFromStorage(\"theme\");\n        return persisted != null\n        ? persisted\n        : initialState;\n  });\n\n  useEffect(() => {\n    addItemToStorage(\"theme\", isLightTheme);\n}, [isLightTheme]);\n\n  return (\n    <ThemeContext.Provider value={{isLightTheme, setIsLightTheme}}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useThemeValue = () => useContext(ThemeContext);","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { addItemToStorage, getItemFromStorage } from '../util/localStorage';\n\nexport const FavouriteContext = createContext();\n\nconst initialState = {\n    favList: []\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case \"ADD_FAV\":\n          return addToFavourite(state, action.payload.favImage);\n      case \"REMOVE_FAV\":\n          return removeFromFavourite(state, action.payload.favImage);\n      default:  \n          return state;\n    }\n};\n\nfunction addToFavourite(state, image) {\n    const newFav = {\n      id: image.id,\n      alt_description: image.alt_description,\n      regular: image.regular\n    };\n\n    return { \n        favList: [...state.favList, newFav] \n    };\n}\n\nfunction removeFromFavourite(state, image) {\n    return {\n        favList:  state.favList.filter(x => x.id !== image.id)\n    };\n}\n  \nexport const FavouriteContextProvider = ({ children }) => {\n    const [globalState, dispatch] = useReducer(reducer, initialState, (initialState) => {\n        const persisted = getItemFromStorage(\"fav\");\n        return persisted !== null\n        ? persisted\n        : initialState;\n    });\n\n    useEffect(() => {\n        addItemToStorage(\"fav\", globalState);\n    }, [globalState])\n\n    return (\n        <FavouriteContext.Provider value={{ globalState, dispatch}}>\n            {children}\n        </FavouriteContext.Provider>\n    );\n};\n\nexport const useFavouriteValue = () => useContext(FavouriteContext);","import React from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { useThemeValue, useQueryValue, usePageNumberValue } from '../../../context';\nimport './SearchBar.css';\n\nexport const SearchBar = () => {\n\n    const { isLightTheme } = useThemeValue();\n    const  { setQuery }  = useQueryValue();\n    const  { setPageNumber }  = usePageNumberValue();\n    return (\n        <div \n            className={isLightTheme ? \"search-container\" : \"search-container-dark\" }\n            data-testid={isLightTheme ? \"search-container\" : \"search-container-dark\"}\n        >  \n            <span data-testid=\"search-icon\"> <FaSearch /> </span>\n            <input \n                type=\"text\" \n                className=\"search-bar\"\n                aria-label=\"search bar\"\n                placeholder=\"Search...\"\n                onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                        setQuery(e.target.value);\n                        setPageNumber(1);\n                    }\n                }}\n            />\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { SearchBar } from './search/SearchBar';\nimport { FaBars, FaHeart, FaHome, FaMoon } from 'react-icons/fa';\nimport { AiOutlineClose  } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { useThemeValue } from '../../context';\nimport './Header.css';\n\nexport const Header = () => {\n\n    const { isLightTheme, setIsLightTheme } = useThemeValue();\n    const [sideBar, setSideBar] = useState(false);  \n        \n    const getNavClassName = () => {\n        let className = \"sidebar\";\n        className += isLightTheme ? \" sidebar-light\" : \" sidebar-dark\";\n        className += sideBar ? \" sidebar-active\" : \"\";\n        return className;\n    }\n\n    return (\n        <header \n            className={isLightTheme ? \"header-light\" : \"header-dark\" }\n            data-testid={isLightTheme ? \"header-light\" : \"header-dark\" }\n        >\n            <span className=\"searchBar\"> <SearchBar /> </span>\n            <nav className={getNavClassName()}>\n                <ul className=\"topbar-items\">\n                    <li className=\"navbar-li\" data-testid=\"home-link\" onClick={() => {setSideBar(!sideBar)}}>\n                        <Link to=\"/image-search\">\n                             <span className=\"nav-visibility\"> <FaHome color={isLightTheme ? \"black\" : \"white\"}/> </span>\n                             <span className={isLightTheme ? \"nav-text nav-light\" : \"nav-text nav-dark\"} ><b>Home</b></span>\n                        </Link>\n                    </li>\n\n                     <li className=\"navbar-li\" data-testid=\"fav-link\" onClick={() => {setSideBar(!sideBar)}}>\n                        <Link to=\"/image-search/favourite\">\n                            <span className=\"nav-visibility\"> <FaHeart color={isLightTheme ? \"black\" : \"white\"}/> </span>\n                            <span className={isLightTheme ? \"nav-text nav-light\" : \"nav-text nav-dark\"}><b>Favourite</b></span>\n                        </Link>\n                    </li>\n\n                    <li className=\"navbar-li\">\n                            <span className=\"nav-icon nav-visibility\"><FaMoon color={isLightTheme ? \"black\" : \"white\"}/> </span> \n                            <span className={isLightTheme ? \"nav-text nav-visibility nav-light\" : \"nav-text nav-visibility nav-dark\"}>\n                                <b>Dark Mode</b>\n                            </span>\n                        <label>\n                            <input \n                                aria-label=\"switch-theme\"\n                                type=\"checkbox\" \n                                checked={!isLightTheme}\n                                onClick={() => setIsLightTheme(!isLightTheme)} />\n                            <span className=\"check\"></span>\n                        </label>\n                    </li>                    \n                </ul>\n            </nav>\n\n            <div className=\"navbar\" data-testid=\"navbar\">\n                <Link to=\"#\" className='menu-bar' data-testid=\"menu-link\">\n                    {\n                     sideBar \n                     ? <span data-testid=\"close\"><AiOutlineClose size={28} color={isLightTheme ? \"black\" : \"white\"} onClick={() => {setSideBar(!sideBar)}}/> </span>\n                     : <span data-testid=\"bar\"><FaBars size={28} color={isLightTheme ? \"black\" : \"white\"} onClick={() => {setSideBar(!sideBar)}}/>  </span>\n                    }\n                </Link> \n            </div>\n        </header>\n    );\n}","import React, { useState, useRef }from 'react';\nimport { FaDownload, FaHeart } from 'react-icons/fa';\nimport { useFavouriteValue, useThemeValue } from '../../context';\nimport './IndividualImage.css';\n\nexport const IndividualImage = ({index, id, regular, alt_description}) => {\n\n    const { isLightTheme } = useThemeValue();\n    const { globalState, dispatch } = useFavouriteValue();\n\n    const [isFavourite, setIsFavourite] = useState(globalState.favList.find(x => x.id === id));\n    \n    const downloadCoverRef = useRef(null);\n    const favouriteCoverRef = useRef(null);\n  \n    function displayButtons() {\n        downloadCoverRef.current.style.zIndex = 0;\n        favouriteCoverRef.current.style.zIndex = 0;\n    }\n\n    const handleFavorite = () => {\n        var action;\n        if(isFavourite) {\n          action = {\n            type: \"REMOVE_FAV\",\n            payload: {\n              favImage: { id }\n            }\n          };\n        }\n        else {\n          action = {\n            type: \"ADD_FAV\",\n            payload: {\n              favImage: { id, regular, alt_description }\n            }\n          };\n        }\n      \n        dispatch(action);\n        setIsFavourite(!isFavourite);\n    }\n\n    const downloadImage = (idd, imageUrl)  => {\n        fetch(imageUrl, {\n          method: \"GET\",\n          headers: {}\n        })\n          .then(response => {\n            response.arrayBuffer().then((buffer) => {\n              const url = window.URL.createObjectURL(new Blob([buffer]));\n              const link = document.createElement(\"a\");\n              link.href = url;\n              link.setAttribute(\"download\", `${idd}.png`);\n              document.body.appendChild(link);\n              link.click();\n            });\n          })\n          .catch(err => {\n            console.log(err);\n          });\n    };\n\n    return (\n        <li key={index} className=\"img-list-item\" data-testid=\"img-list-item\"> { \n            <div className=\"img-container\" data-testid=\"img-container\">\n              <button\n                className=\"favourite-button\"\n                data-testid=\"favourite-button\"\n                aria-label=\"favourite button\"\n                onClick={() => {handleFavorite()}}\n              >\n                <span className=\"cover favourite-icon\"> \n                  <FaHeart color={isFavourite ? \"red\" : isLightTheme ? \"black\" : \"white\"} /> \n                </span> \n                <span ref={favouriteCoverRef} className= {isLightTheme ? \"cover white-cover\" : \"cover black-cover\"} />        \n              </button>\n\n              <button\n                className=\"download-button\"\n                data-testid=\"download-button\"\n                aria-label=\"download button\"\n                onClick={() => { downloadImage(id, regular)}}\n              >\n                <span className=\"cover download-icon\"> \n                  <FaDownload color={isLightTheme ? \"black\" : \"white\"} /> \n                </span> \n                <span ref={downloadCoverRef} className= {isLightTheme ? \"cover white-cover\" : \"cover black-cover\"} />        \n              </button>\n\n               <img \n                  alt={alt_description}\n                  aria-label={alt_description}\n                  className=\"img-card\"  \n                  data-testid=\"img-card\"\n                  onLoad={() => {displayButtons()}}\n                  src={regular}\n              />\n           </div> }\n          </li> \n    );\n}","export const BASE_URL = process.env.REACT_APP_BASE_URL;\nexport const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;","import React, { useRef, useCallback } from 'react';\nimport { IndividualImage } from '../individual-image/IndividualImage';\nimport {  useQueryValue, usePageNumberValue } from '../../context';\nimport { useImageSearch } from '../../hooks';\nimport './ImageGallery.css';\n\nexport const ImageGallery = () => {\n\n  const { query } = useQueryValue();\n  const { pageNumber, setPageNumber } = usePageNumberValue();\n  \n  const { images, loading, hasMore } = useImageSearch(query, pageNumber);\n\n  const observer = useRef();\n\n  const lastImageElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n          setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  \n  return (\n      <div \n        className=\"image-gallery\"\n        data-testid=\"image-gallery\"\n      >\n         { \n          <ul className=\"image-gallery-ul\" data-testid=\"image-gallery-ul\">\n              {images.map((image, index) => { \n                return (                  \n                  <IndividualImage\n                    index={index}\n                    id={image.id}\n                    regular={image.urls.regular}\n                    alt_description={image.alt_description}\n                  />\n                );\n              })}\n             <span ref={lastImageElementRef}></span>   \n          </ul> \n         }\n      </div>\n  );    \n}","import { useState, useEffect } from 'react';\nimport { BASE_URL, CLIENT_ID } from '../util/constants';\nimport axios from 'axios';\n\nexport const useImageSearch = (query, pageNumber) => {\n\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [images, setImages] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n    \n  useEffect(() => {\n    setImages([]);\n  }, [query])\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    async function fetchImages() {\n      await axios({\n        method: 'GET',\n        url: BASE_URL,\n        params: { client_id: CLIENT_ID, query: query, page: pageNumber },\n      }).then(res => {\n          setImages(prevImages => (\n              [...prevImages, ...res.data.results]\n          ))\n        setHasMore(res.data.results.length > 0)\n        setLoading(false)\n      }).catch(e => {\n        setError(true)\n      })\n    }\n\n    fetchImages();\n  \n\n  }, [query, pageNumber]);\n  \n  return { loading, error, images, hasMore }\n}\n","import React from 'react';\nimport { IndividualImage } from '../individual-image/IndividualImage';\nimport { useFavouriteValue } from '../../context';\nimport './FavouriteGallery.css';\n\nexport const FavouriteGallery = () => {\n\n  const { globalState } = useFavouriteValue();\n\n  return (\n      <div \n        className=\"fav-gallery\"\n        data-testid=\"fav-gallery\"\n      >\n         { \n          <ul className=\"fav-gallery-ul\" data-testid=\"fav-gallery-ul\">\n              {globalState.favList.map((fav, index) => { \n                return (                  \n                  <IndividualImage\n                    index={index}\n                    id={fav.id}\n                    regular={fav.regular}\n                    alt_description={fav.alt_description}\n                  />\n                );\n              })}\n          </ul> \n         }\n      </div>\n  );    \n}","import React from 'react';\nimport { ImageGallery } from '../../components';\nimport { useThemeValue } from '../../context';\n\nexport const Home = () => {\n  \n  const { isLightTheme } = useThemeValue();\n\n  isLightTheme \n  ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\n  : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\n\n    return (\n        <>\n           <ImageGallery /> \n        </>\n    );\n}","import React from 'react';\nimport { FavouriteGallery } from '../../components';\nimport { useThemeValue } from '../../context';\n\nexport const Favourite = () => {\n\n    const { isLightTheme } = useThemeValue();\n\n    isLightTheme \n    ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\n    : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\n\n    return (\n        <>\n        <FavouriteGallery />\n        </>\n    );\n}","import React from 'react';  \nimport './Error.css';\nimport { useThemeValue } from '../../context';\n\nexport const Error = () => {\n\n    const { isLightTheme } = useThemeValue();\n\n    isLightTheme \n    ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\n    : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\n\n    return (\n        <div className=\"error\" data-testid=\"error\">\n            <h2 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>Oops! Page not found.</h2>\n            <h1 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>404</h1>\n            <h3 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>Sorry, this page isn't available.</h3>\n        </div>\n    );\n\n}","import React from 'react';\nimport { ThemeContextProvider, FavouriteContextProvider, SearchQueryContextProvider } from './context';\nimport { Home, Favourite, Error } from './views';\nimport { Header } from './components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport './App.css';\n\nexport const App = () => {\n\n  return (\n      <ThemeContextProvider>\n          <FavouriteContextProvider>\n            <SearchQueryContextProvider>\n              <Router>\n                  <Header /> \n                  <Switch>\n                      <Route exact path=\"/image-search\">\n                          <Home />\n                      </Route>\n                      <Route exact path=\"/image-search/favourite\">\n                          <Favourite />\n                      </Route>\n                      <Router path=\"*\">\n                          <Error />\n                      </Router>\n                  </Switch>\n              </Router>\n            </SearchQueryContextProvider>\n          </FavouriteContextProvider>\n      </ThemeContextProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}