{"version":3,"sources":["context/query-context.js","util/localStorage.js","context/theme-context.js","context/favourite-context.js","components/header/search/SearchBar.js","components/header/Header.js","components/individual-image/IndividualImage.js","util/constants.js","components/image-gallery/ImageGallery.js","hooks/useImageSearch.js","components/favourite-gallery/FavouriteGallery.js","views/home/Home.js","views/favourite/Favourite.js","views/error/Error.js","App.js","index.js"],"names":["SearchQueryContext","createContext","SearchQueryContextProvider","children","useState","query","setQuery","pageNumber","setPageNumber","Provider","value","useQueryValue","useContext","usePageNumberValue","getItemFromStorage","key","localStorage","JSON","parse","getItem","err","console","error","addItemToStorage","item","setItem","stringify","ThemeContext","ThemeContextProvider","persisted","isLightTheme","setIsLightTheme","useEffect","useThemeValue","FavouriteContext","initialState","favList","reducer","state","action","type","image","newFav","id","alt_description","regular","addToFavourite","payload","favImage","filter","x","removeFromFavourite","FavouriteContextProvider","useReducer","globalState","dispatch","useFavouriteValue","SearchBar","className","data-testid","aria-label","placeholder","onKeyDown","e","target","Header","sideBar","setSideBar","location","useLocation","pathname","isHome","setIsHome","isFav","setIsFav","getNavClassName","to","onClick","color","setNavIconColorForHome","setNavTextColorForHome","setNavIconColorForFav","setNavTextColorForFav","onChange","checked","size","IndividualImage","find","isFavourite","setIsFavourite","downloadCoverRef","useRef","favouriteCoverRef","log","handleFavourite","ref","idd","fetch","method","headers","then","response","arrayBuffer","buffer","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","catch","alt","onLoad","current","style","zIndex","src","BASE_URL","process","CLIENT_ID","ImageGallery","loading","setLoading","setError","images","setImages","hasMore","setHasMore","a","axios","params","client_id","page","res","prevImages","data","results","length","fetchImages","useImageSearch","observer","lastImageElementRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","map","urls","FavouriteGallery","fav","Home","getElementsByTagName","Favourite","Error","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41124088.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const SearchQueryContext = createContext();\r\n\r\nexport const SearchQueryContextProvider = ({ children }) => {\r\n  const [query, setQuery] = useState(\"mountains\");\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  return (\r\n    <SearchQueryContext.Provider value={{query, setQuery, pageNumber, setPageNumber}}>\r\n      {children}\r\n    </SearchQueryContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQueryValue = () => {\r\n  const { query, setQuery } = useContext(SearchQueryContext);\r\n  return {query, setQuery };\r\n} \r\n\r\nexport const usePageNumberValue = () => {\r\n  const { pageNumber, setPageNumber } = useContext(SearchQueryContext);\r\n  return { pageNumber, setPageNumber }\r\n} ","export const clearStorage = () => localStorage.clear();\r\n\r\nexport const getItemFromStorage = (key) => {\r\n    if (!localStorage) return;\r\n        \r\n    try {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    } catch (err) {\r\n        console.error(`Error getting item ${key} from localStorage`, err);\r\n    }\r\n};\r\n\r\nexport const addItemToStorage = (key, item) => {\r\n    if (!localStorage) return;\r\n\r\n    try {\r\n        return localStorage.setItem(key, JSON.stringify(item));\r\n    } catch (err) {\r\n        console.error(`Error storing item ${key} to localStorage`, err);\r\n    }\r\n};\r\n\r\nexport const removeItemFromStorage = (key) => {\r\n    if (!localStorage) return;\r\n\r\n    try {\r\n        return localStorage.removeItem(key);\r\n    } catch (err) {\r\n        console.error(`Error removing item ${key} from localStorage`, err);\r\n    }\r\n};","import React, { useEffect, createContext, useContext, useState } from 'react';\r\nimport { addItemToStorage, getItemFromStorage } from '../util/localStorage';\r\n\r\nconst initialState = true;\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const  ThemeContextProvider = ({ children }) => {\r\n  const [ isLightTheme, setIsLightTheme ] = useState(() => {\r\n    const persisted = getItemFromStorage(\"theme\");\r\n        return persisted != null\r\n        ? persisted\r\n        : initialState;\r\n  });\r\n\r\n  useEffect(() => {\r\n    addItemToStorage(\"theme\", isLightTheme);\r\n}, [isLightTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{isLightTheme, setIsLightTheme}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeValue = () => useContext(ThemeContext);","import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { addItemToStorage, getItemFromStorage } from '../util/localStorage';\r\n\r\nexport const FavouriteContext = createContext();\r\n\r\nconst initialState = {\r\n    favList: []\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_FAV\":\r\n          return addToFavourite(state, action.payload.favImage);\r\n      case \"REMOVE_FAV\":\r\n          return removeFromFavourite(state, action.payload.favImage);\r\n      default:  \r\n          return state;\r\n    }\r\n};\r\n\r\nfunction addToFavourite(state, image) {\r\n    const newFav = {\r\n      id: image.id,\r\n      alt_description: image.alt_description,\r\n      regular: image.regular\r\n    };\r\n\r\n    return { \r\n        favList: [...state.favList, newFav] \r\n    };\r\n}\r\n\r\nfunction removeFromFavourite(state, image) {\r\n    return {\r\n        favList:  state.favList.filter(x => x.id !== image.id)\r\n    };\r\n}\r\n  \r\nexport const FavouriteContextProvider = ({ children }) => {\r\n    const [globalState, dispatch] = useReducer(reducer, initialState, (initialState) => {\r\n        const persisted = getItemFromStorage(\"fav\");\r\n        return persisted !== null\r\n        ? persisted\r\n        : initialState;\r\n    });\r\n\r\n    useEffect(() => {\r\n        addItemToStorage(\"fav\", globalState);\r\n    }, [globalState])\r\n\r\n    return (\r\n        <FavouriteContext.Provider value={{ globalState, dispatch}}>\r\n            {children}\r\n        </FavouriteContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useFavouriteValue = () => useContext(FavouriteContext);","import React from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { useThemeValue, useQueryValue, usePageNumberValue } from '../../../context';\r\nimport './SearchBar.css';\r\n\r\nexport const SearchBar = () => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n    const  { setQuery }  = useQueryValue();\r\n    const  { setPageNumber }  = usePageNumberValue();\r\n    return (\r\n        <div \r\n            className={isLightTheme ? \"search-container\" : \"search-container-dark\" }\r\n            data-testid={isLightTheme ? \"search-container\" : \"search-container-dark\"}\r\n        >  \r\n            <span data-testid=\"search-icon\"> <FaSearch /> </span>\r\n            <input \r\n                type=\"text\" \r\n                className=\"search-bar\"\r\n                aria-label=\"search bar\"\r\n                placeholder=\"Search...\"\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        setQuery(e.target.value);\r\n                        setPageNumber(1);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { SearchBar } from './search/SearchBar';\r\nimport { FaBars, FaHeart, FaHome, FaMoon } from 'react-icons/fa';\r\nimport { AiOutlineClose  } from 'react-icons/ai';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useThemeValue } from '../../context'\r\nimport './Header.css';\r\n\r\nexport const Header = () => {\r\n\r\n    const { isLightTheme, setIsLightTheme } = useThemeValue();\r\n    const [sideBar, setSideBar] = useState(false);  \r\n\r\n    const location = useLocation();\r\n    const [isHome, setIsHome] = useState(location.pathname === \"/\" ? true : false);  \r\n    const [isFav, setIsFav] = useState(location.pathname === \"/favourite\" ? true : false);  \r\n        \r\n    const getNavClassName = () => {\r\n        var className = \"sidebar\";\r\n        className += isLightTheme ? \" sidebar-light\" : \" sidebar-dark\";\r\n        className += sideBar ? \" sidebar-active\" : \"\";\r\n        return className;\r\n    }\r\n\r\n    const setHome = () => {\r\n        setSideBar(!sideBar);\r\n        setIsHome(true);\r\n        setIsFav(false);\r\n    }\r\n\r\n    const setFav = () => {\r\n        setSideBar(!sideBar);\r\n        setIsHome(false);\r\n        setIsFav(true);\r\n    }\r\n\r\n\r\n    const setNavIconColorForHome = () => {\r\n        let color = \"\";\r\n        color = isLightTheme ? \"black\" : \"white\";\r\n        if(isHome && isLightTheme) color = \"#34a1cd\";    \r\n        else if(isHome && !isLightTheme) color = \"#ade6e6\";\r\n        return color;\r\n    }\r\n\r\n\r\n    const setNavIconColorForFav = () => {\r\n        let color = \"\";\r\n        color = isLightTheme ? \"black\" : \"white\";\r\n        if(isFav && isLightTheme) color = \"#34a1cd\";    \r\n        else if(isFav && !isLightTheme) color = \"#ade6e6\";\r\n        return color;\r\n    }\r\n\r\n\r\n    const setNavTextColorForHome = () => {\r\n        let className = \"nav-text\";\r\n        if(isHome && isLightTheme) className += \" nav-selected-light\";\r\n        else if(isHome && !isLightTheme) className += \" nav-selected-dark\";\r\n        else if(isLightTheme) className += \" nav-light\" \r\n        else className += \" nav-dark\";\r\n        return className\r\n    }\r\n\r\n\r\n    const setNavTextColorForFav = () => {\r\n        let className = \"nav-text\";\r\n        if(isFav && isLightTheme) className += \" nav-selected-light\";\r\n        else if(isFav && !isLightTheme) className += \" nav-selected-dark\";\r\n        else if(isLightTheme) className += \" nav-light\" \r\n        else className += \" nav-dark\";\r\n        return className\r\n    }\r\n\r\n\r\n    return (\r\n        <header \r\n            className={isLightTheme ? \"header-light\" : \"header-dark\" }\r\n            data-testid={isLightTheme ? \"header-light\" : \"header-dark\" }\r\n        >\r\n            <span className=\"searchBar\"> <SearchBar /> </span>\r\n            <nav className={getNavClassName()}>\r\n                <ul className=\"topbar-items\">\r\n                    <li className=\"navbar-li\" data-testid=\"home-link\" >\r\n                        <Link to=\"/image-search\" onClick={() => { setHome()}}>\r\n                             <span className=\"nav-visibility\"> <FaHome color={setNavIconColorForHome()}/> </span>\r\n                             <span className={setNavTextColorForHome()} ><b>Home</b></span>\r\n                        </Link>\r\n                    </li>\r\n\r\n                     <li className=\"navbar-li\" data-testid=\"fav-link\">\r\n                        <Link to=\"/image-search/favourite\" onClick={() => {setFav()}}>\r\n                            <span className=\"nav-visibility\"> <FaHeart color={setNavIconColorForFav()}/> </span>\r\n                            <span className={setNavTextColorForFav()}><b>Favourite</b></span>\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"navbar-li\">\r\n                            <span className=\"nav-icon nav-visibility\"><FaMoon color={isLightTheme ? \"black\" : \"white\"}/> </span> \r\n                            <span className={isLightTheme ? \"nav-text nav-visibility nav-light\" : \"nav-text nav-visibility nav-dark\"}>\r\n                                <b>Dark Mode</b>\r\n                            </span>\r\n                        <label>\r\n                            <input \r\n                                aria-label=\"switch-theme\"\r\n                                type=\"checkbox\" \r\n                                onClick={() => setIsLightTheme(!isLightTheme)} \r\n                                onChange={e => {}}\r\n                                checked={!isLightTheme}/>\r\n                            <span className=\"check\"></span>\r\n                        </label>\r\n                    </li>                    \r\n                </ul>\r\n            </nav>\r\n\r\n            <div className=\"navbar\" data-testid=\"navbar\">\r\n                <Link to=\"#\" className='menu-bar' data-testid=\"menu-link\">\r\n                    {\r\n                     sideBar \r\n                     ? <span data-testid=\"close\"><AiOutlineClose size={28} color={isLightTheme ? \"black\" : \"white\"} onClick={() => {setSideBar(!sideBar)}}/> </span>\r\n                     : <span data-testid=\"bar\"><FaBars size={28} color={isLightTheme ? \"black\" : \"white\"} onClick={() => {setSideBar(!sideBar)}}/>  </span>\r\n                    }\r\n                </Link> \r\n            </div>\r\n        </header>\r\n    );\r\n}","import React, { useState, useRef } from 'react';\r\nimport { FaDownload, FaHeart } from 'react-icons/fa';\r\nimport { useFavouriteValue, useThemeValue } from '../../context';\r\nimport './IndividualImage.css';\r\n\r\nexport const IndividualImage = ({id, regular, alt_description}) => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n    const { globalState, dispatch } = useFavouriteValue();\r\n\r\n    const [isFavourite, setIsFavourite] = useState(globalState.favList.find(x => x.id === id));\r\n\r\n    const downloadCoverRef = useRef(null);\r\n    const favouriteCoverRef = useRef(null);\r\n  \r\n    function displayButtons() {\r\n        downloadCoverRef.current.style.zIndex = 0;\r\n        favouriteCoverRef.current.style.zIndex = 0;\r\n    }\r\n\r\n    const handleFavourite = (id, regular, alt_description) => {\r\n        let action;\r\n        if(isFavourite) {\r\n          console.log(\"Rem\")\r\n          action = {\r\n            type: \"REMOVE_FAV\",\r\n            payload: {\r\n              favImage: { id }\r\n            }\r\n          };\r\n        }\r\n        else {\r\n          console.log(\"Adding\")\r\n          action = {\r\n            type: \"ADD_FAV\",\r\n            payload: {\r\n              favImage: { id, regular, alt_description }\r\n            }\r\n          };\r\n        }\r\n      \r\n        dispatch(action);\r\n        setIsFavourite(!isFavourite);\r\n    }\r\n\r\n    const downloadImage = (idd, imageUrl)  => {\r\n        fetch(imageUrl, {\r\n          method: \"GET\",\r\n          headers: {}\r\n        })\r\n          .then(response => {\r\n            response.arrayBuffer().then((buffer) => {\r\n              const url = window.URL.createObjectURL(new Blob([buffer]));\r\n              const link = document.createElement(\"a\");\r\n              link.href = url;\r\n              link.setAttribute(\"download\", `${idd}.png`);\r\n              document.body.appendChild(link);\r\n              link.click();\r\n            });\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n    };\r\n\r\n    return (\r\n        <li className=\"img-list-item\" data-testid=\"img-list-item\"> { \r\n            <div className=\"img-container\" data-testid=\"img-container\">\r\n              <button\r\n                className=\"favourite-button\"\r\n                data-testid=\"favourite-button\"\r\n                aria-label=\"favourite button\"\r\n                onClick={() => {handleFavourite(id, regular, alt_description)}}\r\n              >\r\n                <span className=\"cover favourite-icon\"> \r\n                  <FaHeart color={isFavourite ? \"red\" : isLightTheme ? \"black\" : \"white\"} /> \r\n                </span> \r\n                <span ref={favouriteCoverRef} className= {isLightTheme ? \"cover white-cover\" : \"cover black-cover\"} />        \r\n              </button>\r\n\r\n              <button\r\n                className=\"download-button\"\r\n                data-testid=\"download-button\"\r\n                aria-label=\"download button\"\r\n                onClick={() => { downloadImage(id, regular)}}\r\n              >\r\n                <span className=\"cover download-icon\"> \r\n                  <FaDownload color={isLightTheme ? \"black\" : \"white\"} /> \r\n                </span> \r\n                <span ref={downloadCoverRef} className= {isLightTheme ? \"cover white-cover\" : \"cover black-cover\"} />        \r\n              </button>\r\n\r\n               <img \r\n                  alt={alt_description}\r\n                  aria-label={alt_description}\r\n                  className=\"img-card\"  \r\n                  data-testid=\"img-card\"\r\n                  onLoad={() => {displayButtons()}}\r\n                  src={regular}\r\n              />\r\n           </div> }\r\n          </li> \r\n    );\r\n}","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;","import React, { useRef, useCallback } from 'react';\r\nimport { IndividualImage } from '../individual-image/IndividualImage';\r\nimport {  useQueryValue, usePageNumberValue } from '../../context';\r\nimport { useImageSearch } from '../../hooks';\r\nimport './ImageGallery.css';\r\n\r\nexport const ImageGallery = () => {\r\n\r\n  const { query } = useQueryValue();\r\n  const { pageNumber, setPageNumber } = usePageNumberValue();\r\n  \r\n  const { images, loading, hasMore } = useImageSearch(query, pageNumber);\r\n\r\n  const observer = useRef();\r\n\r\n  const lastImageElementRef = useCallback(node => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n          setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, hasMore]);\r\n  \r\n  return (\r\n      <div \r\n        className=\"image-gallery\"\r\n        data-testid=\"image-gallery\"\r\n      >\r\n         { \r\n          <ul className=\"image-gallery-ul\" data-testid=\"image-gallery-ul\">\r\n              {images.map((image) => { \r\n                return (                  \r\n                  <IndividualImage\r\n                    key={image.id}\r\n                    id={image.id}\r\n                    regular={image.urls.regular}\r\n                    alt_description={image.alt_description}\r\n                  />\r\n                );\r\n              })}\r\n             <span ref={lastImageElementRef}></span>   \r\n          </ul> \r\n         }\r\n      </div>\r\n  );    \r\n}","import { useState, useEffect } from 'react';\r\nimport { BASE_URL, CLIENT_ID } from '../util/constants';\r\nimport axios from 'axios';\r\n\r\nexport const useImageSearch = (query, pageNumber) => {\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [images, setImages] = useState([])\r\n  const [hasMore, setHasMore] = useState(false)\r\n    \r\n  useEffect(() => {\r\n    setImages([]);\r\n  }, [query])\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    async function fetchImages() {\r\n      await axios({\r\n        method: 'GET',\r\n        url: BASE_URL,\r\n        params: { client_id: CLIENT_ID, query: query, page: pageNumber },\r\n      }).then(res => {\r\n          setImages(prevImages => (\r\n              [...prevImages, ...res.data.results]\r\n          ))\r\n        setHasMore(res.data.results.length > 0)\r\n        setLoading(false)\r\n      }).catch(e => {\r\n        setError(true)\r\n      })\r\n    }\r\n\r\n    fetchImages();\r\n  \r\n\r\n  }, [query, pageNumber]);\r\n  \r\n  return { loading, error, images, hasMore }\r\n}\r\n","import React from 'react';\r\nimport { IndividualImage } from '../individual-image/IndividualImage';\r\nimport { useFavouriteValue } from '../../context';\r\nimport './FavouriteGallery.css';\r\n\r\nexport const FavouriteGallery = () => {\r\n\r\n  const { globalState } = useFavouriteValue();\r\n\r\n  return (\r\n      <div \r\n        className=\"fav-gallery\"\r\n        data-testid=\"fav-gallery\"\r\n      >\r\n         { \r\n          <ul className=\"fav-gallery-ul\" data-testid=\"fav-gallery-ul\">\r\n              {globalState.favList.map((fav) => { \r\n                return (                  \r\n                  <IndividualImage\r\n                    key={fav.id}\r\n                    id={fav.id}\r\n                    regular={fav.regular}\r\n                    alt_description={fav.alt_description}\r\n                  />\r\n                );\r\n              })}\r\n          </ul> \r\n         }\r\n      </div>\r\n  );    \r\n}","import React from 'react';\r\nimport { ImageGallery } from '../../components';\r\nimport { useThemeValue } from '../../context';\r\n\r\nexport const Home = () => {\r\n  \r\n  const { isLightTheme } = useThemeValue();\r\n\r\n  isLightTheme \r\n  ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\r\n  : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\r\n\r\n    return (\r\n        <>\r\n           <ImageGallery /> \r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { FavouriteGallery } from '../../components';\r\nimport { useThemeValue } from '../../context';\r\n\r\nexport const Favourite = () => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n\r\n    isLightTheme \r\n    ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\r\n    : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\r\n\r\n    return (\r\n        <>\r\n        <FavouriteGallery />\r\n        </>\r\n    );\r\n}","import React from 'react';  \r\nimport './Error.css';\r\nimport { useThemeValue } from '../../context';\r\n\r\nexport const Error = () => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n\r\n    isLightTheme \r\n    ? document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5')\r\n    : document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\r\n\r\n    return (\r\n        <div className=\"error\" data-testid=\"error\">\r\n            <h2 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>Oops! Page not found.</h2>\r\n            <h1 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>404</h1>\r\n            <h3 className={isLightTheme ? \"light-mode\" : \"dark-mode\"}>Sorry, this page isn't available.</h3>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\nimport { ThemeContextProvider, FavouriteContextProvider, SearchQueryContextProvider } from './context';\nimport { Home, Favourite, Error } from './views';\nimport { Header } from './components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport './App.css';\n\nexport const App = () => {\n\n  return (\n      <ThemeContextProvider>\n          <FavouriteContextProvider>\n            <SearchQueryContextProvider>\n              <Router>\n                  <Header /> \n                  <Switch>\n                      <Route exact path=\"/image-search\">\n                          <Home />\n                      </Route>\n                      <Route exact path=\"/image-search/favourite\">\n                          <Favourite />\n                      </Route>\n                      <Router path=\"*\">\n                          <Error />\n                      </Router>\n                  </Switch>\n              </Router>\n            </SearchQueryContextProvider>\n          </FavouriteContextProvider>\n      </ThemeContextProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}