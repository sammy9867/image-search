{"version":3,"sources":["context/query-context.js","context/theme-context.js","components/header/search/SearchBar.js","components/header/Header.js","util/constants.js","components/image-gallery/ImageGallery.js","hooks/useImageSearch.js","App.js","index.js"],"names":["SearchQueryContext","createContext","SearchQueryContextProvider","children","useState","query","setQuery","pageNumber","setPageNumber","Provider","value","useQueryValue","useContext","ThemeContext","ThemeContextProvider","isLightTheme","setIsLightTheme","useThemeValue","SearchBar","className","type","placeholder","onKeyDown","e","key","target","Header","data-testid","onClick","BASE_URL","process","CLIENT_ID","ImageGallery","loading","setLoading","error","setError","images","setImages","hasMore","setHasMore","useEffect","a","axios","method","url","params","client_id","page","then","res","prevImages","data","results","length","catch","fetchImages","useImageSearch","document","getElementsByTagName","setAttribute","observer","useRef","lastImageElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","downloadImage","id","imageUrl","fetch","headers","response","arrayBuffer","buffer","window","URL","createObjectURL","Blob","link","createElement","href","body","appendChild","click","err","console","log","map","image","index","alt","alt_description","ref","src","urls","regular","color","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0302b36c.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const SearchQueryContext = createContext();\r\n\r\nexport const  SearchQueryContextProvider = ({ children }) => {\r\n  const [ query, setQuery ] = useState(\"mountains\");\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  return (\r\n    <SearchQueryContext.Provider value={{query, setQuery, pageNumber, setPageNumber}}>\r\n      {children}\r\n    </SearchQueryContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQueryValue = () => useContext(SearchQueryContext);","import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const  ThemeContextProvider = ({ children }) => {\r\n  const [ isLightTheme, setIsLightTheme ] = useState(true);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{isLightTheme, setIsLightTheme}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeValue = () => useContext(ThemeContext);","import React from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { useThemeValue, useQueryValue } from '../../../context';\r\nimport './SearchBar.css'\r\n\r\nexport const SearchBar = () => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n    const  { setQuery, setPageNumber }  = useQueryValue();\r\n\r\n    return (\r\n        <div className={isLightTheme ? \"search-container\" : \"search-container-dark\" }>  \r\n            <span> <FaSearch /> </span>\r\n            <input \r\n                type=\"text\" \r\n                className=\"search-bar\"\r\n                placeholder=\"Search...\"\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        setQuery(e.target.value);\r\n                        setPageNumber(1);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css'\r\nimport { SearchBar } from './search/SearchBar';\r\nimport { useThemeValue } from '../../context';\r\n\r\nexport const Header = () => {\r\n    const { isLightTheme, setIsLightTheme } = useThemeValue();\r\n\r\n    return (\r\n        <header className={isLightTheme ? \"header-light\" : \"header-dark\" } data-testid=\"header\">\r\n            <span> <SearchBar /></span>\r\n            <label>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    onClick={() => setIsLightTheme(!isLightTheme)} />\r\n                <span className=\"check\"></span>\r\n            </label>\r\n        </header>\r\n    );\r\n}","export const BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;","import React, { useRef, useCallback }from 'react';\r\nimport { useThemeValue, useQueryValue } from '../../context';\r\nimport { useImageSearch } from '../../hooks';\r\nimport { FaDownload } from 'react-icons/fa';\r\n\r\nimport './ImageGallery.css'\r\n\r\nexport const ImageGallery = () => {\r\n\r\n    const { isLightTheme } = useThemeValue();\r\n\r\n    const { setPageNumber } = useQueryValue();\r\n    \r\n    const { images, hasMore, loading } = useImageSearch();\r\n\r\n    isLightTheme ? \r\n      document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:#F0F2F5') :\r\n      document.getElementsByTagName('body')[0].setAttribute('style', 'background-color:black');\r\n    \r\n    const observer = useRef();\r\n\r\n    const lastImageElementRef = useCallback(node => {\r\n        if (loading) return\r\n        if (observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n            setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n        }\r\n        })\r\n        if (node) observer.current.observe(node);\r\n    }, [loading, hasMore])\r\n\r\n\r\n    const downloadImage = (id, imageUrl) => {\r\n        fetch(imageUrl, {\r\n          method: \"GET\",\r\n          headers: {}\r\n        })\r\n          .then(response => {\r\n            response.arrayBuffer().then(function(buffer) {\r\n              const url = window.URL.createObjectURL(new Blob([buffer]));\r\n              const link = document.createElement(\"a\");\r\n              link.href = url;\r\n              link.setAttribute(\"download\", `${id}.png`);\r\n              document.body.appendChild(link);\r\n              link.click();\r\n            });\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n    return (\r\n        <div className=\"image-gallery \">\r\n           { \r\n            <ul>\r\n                {images.map((image, index) => {\r\n                    if (images.length === index + 1) {\r\n                      return  (\r\n                        <li key={index} className=\"list\"> {    \r\n                          <div className=\"img-container\">\r\n                            <img \r\n                              alt={image.alt_description}\r\n                              className=\"card\"  \r\n                              ref={lastImageElementRef} \r\n                              src={image.urls.regular}\r\n                            />\r\n                            <button\r\n                              className=\"downloadButton\"\r\n                              onClick={() => { downloadImage(image.id, image.urls.regular)}}\r\n                             >\r\n                                <FaDownload color=\"black\" />\r\n                            </button> \r\n                          </div> }   \r\n                        </li> )\r\n                    } else {\r\n                        return  (\r\n                            <li key={index} className=\"list\"> { \r\n                              <div className=\"img-container\">\r\n                                 <img \r\n                                    alt={image.alt_description}\r\n                                    className=\"card\"  \r\n                                    src={image.urls.regular}\r\n                                />\r\n                                <button\r\n                                  className=\"downloadButton\"\r\n                                  onClick={() => { downloadImage(image.id, image.urls.regular)}}\r\n                                >\r\n                                    <FaDownload color=\"black\" />\r\n                                </button>\r\n                             </div> }    \r\n                            </li> )\r\n                    }})}\r\n            </ul> \r\n           }\r\n        </div>\r\n    );    \r\n}","import { useState, useEffect } from 'react';\r\nimport { useQueryValue } from '../context';\r\nimport { BASE_URL, CLIENT_ID } from '../util/constants';\r\nimport axios from 'axios';\r\n\r\nexport const useImageSearch = () => {\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [images, setImages] = useState([])\r\n  const [hasMore, setHasMore] = useState(false)\r\n   \r\n  const { query, pageNumber } = useQueryValue();\r\n    \r\n  useEffect(() => {\r\n    setImages([]);\r\n  }, [query])\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    async function fetchImages() {\r\n      await axios({\r\n        method: 'GET',\r\n        url: BASE_URL,\r\n        params: { client_id: CLIENT_ID, query: query, page: pageNumber },\r\n      }).then(res => {\r\n          setImages(prevImages => (\r\n              [...prevImages, ...res.data.results]\r\n          ))\r\n        setHasMore(res.data.results.length > 0)\r\n        setLoading(false)\r\n      }).catch(e => {\r\n        setError(true)\r\n      })\r\n    }\r\n\r\n    fetchImages();\r\n  \r\n\r\n  }, [query, pageNumber]);\r\n  \r\n  return { loading, error, images, hasMore }\r\n\r\n}\r\n","import React from 'react';\nimport { Header, ImageGallery } from './components';\nimport { ThemeContextProvider, SearchQueryContextProvider } from './context';\n\nexport const App = () => {\n\n  return (\n    <ThemeContextProvider>\n      <SearchQueryContextProvider>\n          <Header />\n          <ImageGallery />\n      </SearchQueryContextProvider>\n    </ThemeContextProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}